import 'dart:async';
import 'dart:io';

import 'definitions.dart';

// TODO: Remove this, it's just to make diffs easier
final compatMode = true;

final _header = '''
// This file was generated by Dart-Code-Class-Builder
// and should not be hand-edited!

"use strict";

''';

class TypeScriptGenerator {
  final classes = new List<ClassDefinition>(); 

  Future writeTo(File file) async {
    final output = new StringBuffer(_header);

    classes.forEach((c) => _writeClass(output, c));

    await file.parent.create(recursive: true);
    await file.writeAsString(output.toString());
  }

  void _writeClass(StringBuffer output, ClassDefinition cl) {
    output.writeln(_formatDoc(cl.doc));
    output.write('export interface ${cl.name} {');
    cl.properties.forEach((p) => _writeProperty(output, p));
    output.writeln('}');
    output.writeln();
  }

  void _writeProperty(StringBuffer output, PropertyDefinition prop) {
    final indent = _getIndent(1);
    output.writeln();
    output.writeln(_formatDoc(prop.doc, indent: indent));
    output.writeln('$indent${prop.name}${prop.isOptional && !compatMode ? "?" : ""}: ${prop.type}${compatMode ? "" : ";"}');    
  }

  String _formatDoc(String doc, { String indent: ""}) {
    final lines = doc.trim().split('\n').map((l) => l.trim());
    return '$indent/**\r\n' + lines.map((l) => '$indent${compatMode ? "" : " * "}$l').join('\r\n') + '\r\n$indent${compatMode ? "" : " "}*/';
  }

  String _getIndent(num level) => '\t' * level;
}
